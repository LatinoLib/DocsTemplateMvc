@{
    ViewBag.PageTitle = "Introduction";
    ViewBag.PageDescription = "Briefly about LATINO, text mining, and machine learning.";
}

<h1 id='section-1' class='page-header'>Introduction</h1>
<p class='lead'>This is some lead text.</p>
<h1 id='section-2'>About LATINO</h1>
<h1 id='section-2'>Text mining</h1>
<p>Text mining employs text preprocessing, modeling (knowledge discovery), visualization, and evaluation techniques to discover, present, and evaluate knowledge from large collections of text documents (also called text corpora). It adopts methodologies and tools most notably from data mining (DM), machine learning (ML), information retrieval (IR), and natural language processing (NLP).</p>
<p>In contrast to a typical data mining problem, where data is expected to be in a structured tabular form, raw text documents are in general unstructured and first need to be transformed into a suitable representation. Two predominant approaches are used in practice. In the first approach, documents are converted into high-dimensional vectors in which dimensions are usually words and phrases extracted from the corpus. The vectors are computed by employing several basic NLP techniques and a feature-weighting scheme. Since the order of terms is discarded in this process, such vectors are also referred to as bag-of-words vectors or simply bags-of-words (BOWs). This approach originates from information retrieval, a scientific field concerned with the retrieval of information objects (such as documents) relevant to the user's information needs. Another approach found in the literature is to convert texts into graphs of recognized entities or extracted triples by employing relatively complex NLP techniques such as part-of-speech tagging, chunking, and parsing. Such representation of text is then further analyzed with graph mining techniques. LATINO is best suited for representing documents as bag-of-words vectors in which features are words and phrases. More details on this kind of BOW model and the corresponding text preprocessing routine are available (here).</p>
<h1 id='section-2'>Machine learning</h1>
<p>In the modeling phase of a text mining process, many different techniques to discover, extract, and organize knowledge from the preprocessed text documents can be employed. We limit ourselves to the setting where modeling is performed by the use of machine learning techniques. Machine learning is concerned with the development of algorithms that allow computer pro-grams to learn from past experience. In more technical terms, machine learning refers to a collection of algorithms that take as input empirical data (e.g., from databases or sensors) and try to discover some characteristics (rules, constraints, patterns, features) of the process that generated the data. Although there exist many generally recognized categories of machine learning algorithms, we only discuss supervised and unsupervised learning methods in this thesis. Within these two categories, we additionally limit ourselves to the classification and clustering algorithms, which leaves out most notably the regression methods.</p>
<p>Classification and regression are both instances of supervised learning where a training set of manually or otherwise correctly labeled observations is available. Classification refers to assigning an instance to one or more predefined discrete classes (in this case, the labels correspond to these classes). In contrast, regression refers to assigning a numeric value to an instance (in this case, the labels are numeric values). In both cases, a training algorithm first builds a model which contains knowledge derived from the training set. This model is then applied in the pre-diction phase to label new instances.</p>
<p>Clustering, on the other hand, is a form of unsupervised learning and is employed when training labels are not available. The task of a clustering algorithm is to arrange instances into groups (i.e., clusters) so that the instances in the same group are more similar to each other than to those in the other groups. Sections 4.1.3 and 4.1.4 provide more details on the selected machine learning principles and techniques and are focusing on the algorithms that are suitable for processing bag-of-words vectors constructed in the text preprocessing phase.</p>
<p>Missing: a paragraph on applications</p>
<p>This is some normal text. This is an inline equation: <span class='math'>\( 
\|\mathbf{x}_i\| = \sqrt{w_{i,1}^2 + w_{i,2}^2 + \ldots + w_{i,n}^2}
\)</span><span class='math-alt-default' />.</p>
<p>And this is a full-line equation:</p>
<p class='math'><span>$$ \cos(\theta) = \frac{\mathbf{x_1}\cdot \mathbf{x_2}}{\|\mathbf{x_1}\|\|\mathbf{x_2}\|} = \frac{\sum_{k=1}^nw_{1,k}w_{2,k}}{\sqrt{\sum_{k=1}^nw_{1,k}^2}\sqrt{\sum_{k=1}^nw_{2,k}^2}} $$</span><span class='math-alt'>Writing more math ...</span></p>
<p>Another paragraph.</p>
<h1 id='section-2'>This is another heading</h1>
<p>And this is again some text.</p>
<h2 id='section-2-1'>This is a sub-heading</h2>
<p>This is some text.</p>
<h3 id='section-2-1-1'>This is a sub-sub-heading</h3>
<p>This is some text.</p>
<h4 id='section-2-1-1-1'>This is a sub-sub-sub-heading</h4>
<p>This is some text.</p>
<h1 id='section-3'>Syntax highlighting</h1>
<p>This is some source code:</p>
<figure class=highlight>
<pre><code class='language-csharp'>using System;
using System.IO;

public static class SomeClassName
{
    // This is some C# source code.
}</code></pre>
</figure>
<p>Syntax highlighting is done with <a href='http://prismjs.com/download.html?themes=prism&languages=c+csharp+cpp+java+scala'>Prism</a>.</p>
<h1 id='section-4'>Based on Bootstrap</h1>
<p>Note that you have all the power of Bootstrap at your fingertips. Take a look at the HTML version for some kick-ass markup snippets.</p>
<h1 id='section-5'>How to use</h1>
<p>First, edit <code>GlobalViewBagActionFilter.cs</code> to set your project's properties. Then simply edit <code>Index.cshtml</code> to create the first page. 
To fully customize the template, edit <code>FooterText.cshtml</code>, <code>FooterMenu.cshtml</code>, and <code>TopNav.cshtml</code>.
This template is not yet finished and so there are several annoyances. The most disturbing thing is that you have to maintain the side-nav by yourself 
(see <code>@@section SideNav</code> in <code>Index.cshtml</code>).</p>

@section SideNav
{
<li> <a href=#section-1>This is an underlined heading</a> </li>
<li>
    <a href=#section-2>This is another heading</a> 
    <ul class=nav>
        <li><a href=#section-2-1>This is a sub-heading</a></li>
    </ul>
</li>
<li> <a href=#section-3>Syntax highlighting</a> </li>
<li> <a href=#section-4>Based on Bootstrap</a> </li>
<li> <a href=#section-5>How to use</a> </li>
}